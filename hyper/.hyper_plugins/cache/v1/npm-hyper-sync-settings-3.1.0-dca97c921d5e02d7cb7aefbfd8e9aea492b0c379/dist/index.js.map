{"version":3,"file":"index.js","sources":["../src/constants.ts","../src/lib/notify.ts","../src/lib/getGitConfig.ts","../src/lib/getCommands/updates.ts","../src/lib/getCommands/restore.ts","../src/lib/getCommands/backup.ts","../src/lib/getCommands/index.ts","../src/lib/checkForMissingSettings.ts","../src/decorateMenu.ts"],"sourcesContent":["// eslint-disable-next-line import/no-extraneous-dependencies\nimport { app, App } from 'electron';\nimport { homedir } from 'os';\nimport { resolve as resolvePath } from 'path';\n\nexport interface SyncSettings {\n  quiet?: boolean;\n  accelerators?: Record<Accelerators, string>;\n}\n\nexport type HyperApp = App & {\n  config: { getConfig: () => { syncSettings?: SyncSettings } };\n};\n\nexport const getHyperApp = (): HyperApp => {\n  if (!app) {\n    throw new Error('electron app is undefined');\n  }\n  (async (): Promise<void> => {\n    await app.whenReady();\n  })();\n  return app as HyperApp;\n};\n\nexport const GIST_URL = (gistId: string, token?: string): string =>\n  `https://${token ? `${token}@` : ''}gist.github.com/${gistId}.git`;\n\nexport const TITLE = 'hyper-sync-settings';\nexport const ERROR_TITLE = `${TITLE} error üî•`;\nexport const SETUP_URL =\n  'https://github.com/dfrankland/hyper-sync-settings#setup';\n\n// If the user defines XDG_CONFIG_HOME they definitely want their config there,\n// otherwise use the home directory in linux/mac and userdata in windows\nexport const DIR_HOME = (): string => {\n  if (typeof process.env.XDG_CONFIG_HOME !== 'undefined') {\n    return resolvePath(process.env.XDG_CONFIG_HOME, 'hyper');\n  }\n\n  return process.platform === 'win32'\n    ? getHyperApp().getPath('userData')\n    : homedir();\n};\n\nexport const DIR_REPO = (): string =>\n  resolvePath(DIR_HOME(), '.hyper_plugins', '.hyper-sync-settings');\n\nexport const FILE_CONFIG = (): string =>\n  resolvePath(DIR_HOME(), '.hyper_plugins', '.hyper-sync-settings.json');\n\nexport const FILE_CONFIG_TEMPLATE = resolvePath(\n  __dirname,\n  'config.default.json',\n);\nexport const FILE_BACKUP = (): string => resolvePath(DIR_REPO(), '.hyper.js');\n\nexport const FILE_RESTORE = (): string => resolvePath(DIR_HOME(), '.hyper.js');\n\nexport type Accelerators =\n  | 'checkForUpdates'\n  | 'backupSettings'\n  | 'restoreSettings'\n  | 'openGist'\n  | 'openRepo'\n  | 'openConfiguration';\n\nexport const POSSIBLE_ACCELERATORS: [\n  'checkForUpdates',\n  'backupSettings',\n  'restoreSettings',\n  'openGist',\n  'openRepo',\n  // eslint-disable-next-line prettier/prettier\n  'openConfiguration',\n] = [\n  'checkForUpdates',\n  'backupSettings',\n  'restoreSettings',\n  'openGist',\n  'openRepo',\n  'openConfiguration',\n];\n","// eslint-disable-next-line import/no-extraneous-dependencies\nimport { Notification, shell } from 'electron';\nimport { getHyperApp } from '../constants';\n\nexport interface NotifyOptions {\n  title: string;\n  body?: string;\n  url?: string;\n  level?: 'debug' | 'info' | 'warn' | 'error';\n}\n\nexport default ({ title, body, url, level = 'debug' }: NotifyOptions): void => {\n  // eslint-disable-next-line no-console\n  console[level]([title, body, url].filter(Boolean).join('\\n'));\n\n  if (!getHyperApp() || !getHyperApp().isReady()) {\n    // eslint-disable-next-line no-console\n    console.error('App is undefined or net yet ready');\n    return;\n  }\n\n  const notification = new Notification({\n    title,\n    body: body || '',\n  });\n\n  if (url) {\n    notification.on('click', (): void => {\n      shell.openExternal(url);\n    });\n  }\n\n  notification.show();\n};\n","import { GitProcess } from 'dugite';\nimport { copyFile, ensureDir, readJson, pathExists } from 'fs-extra';\nimport {\n  FILE_CONFIG,\n  FILE_CONFIG_TEMPLATE,\n  GIST_URL,\n  ERROR_TITLE,\n  DIR_REPO,\n} from '../constants';\nimport notify from './notify';\n\nexport interface IdAndToken {\n  personalAccessToken: string;\n  gistId: string;\n}\n\nexport interface GitConfig extends IdAndToken {\n  url: string;\n  remoteUrl: string;\n  repoPromise: Promise<void>;\n}\n\nconst getIdAndToken = async (): Promise<IdAndToken> => {\n  let config: IdAndToken = {\n    personalAccessToken: '',\n    gistId: '',\n  };\n\n  const {\n    HYPER_SYNC_SETTINGS_PERSONAL_ACCESS_TOKEN,\n    HYPER_SYNC_SETTINGS_GIST_ID,\n  } = process.env;\n\n  if (\n    !HYPER_SYNC_SETTINGS_PERSONAL_ACCESS_TOKEN ||\n    !HYPER_SYNC_SETTINGS_GIST_ID\n  ) {\n    try {\n      if (!(await pathExists(FILE_CONFIG()))) {\n        notify({\n          title: ERROR_TITLE,\n          body: `no config file found in \\`${FILE_CONFIG()}\\`, creating one`,\n          level: 'error',\n        });\n        await copyFile(FILE_CONFIG_TEMPLATE, FILE_CONFIG());\n      } else {\n        try {\n          config = await readJson(FILE_CONFIG());\n        } catch (err) {\n          notify({\n            title: ERROR_TITLE,\n            body: `could not read \\`${FILE_CONFIG()}\\`, maybe the JSON is not valid?`,\n            level: 'error',\n          });\n        }\n      }\n    } catch (err) {\n      notify({\n        title: ERROR_TITLE,\n        body: `could not check in \\`${FILE_CONFIG()}\\` for config file`,\n        level: 'error',\n      });\n    }\n  }\n\n  if (HYPER_SYNC_SETTINGS_PERSONAL_ACCESS_TOKEN) {\n    config.personalAccessToken = HYPER_SYNC_SETTINGS_PERSONAL_ACCESS_TOKEN;\n  }\n\n  if (HYPER_SYNC_SETTINGS_GIST_ID) {\n    config.gistId = HYPER_SYNC_SETTINGS_GIST_ID;\n  }\n\n  return config;\n};\n\nexport default async (): Promise<GitConfig> => {\n  const config: GitConfig = {\n    ...(await getIdAndToken()),\n    url: '',\n    remoteUrl: '',\n    repoPromise: Promise.resolve(),\n  };\n\n  const { personalAccessToken, gistId } = config;\n\n  if (!personalAccessToken || !gistId) return config;\n\n  const remoteUrl = GIST_URL(gistId, personalAccessToken);\n\n  const repoPromise = (async (): Promise<void> => {\n    await ensureDir(DIR_REPO());\n    try {\n      await GitProcess.exec(['clone', remoteUrl, '.'], DIR_REPO());\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(`${ERROR_TITLE} ${err.message}`);\n    }\n  })();\n\n  return {\n    ...config,\n    url: GIST_URL(gistId),\n    remoteUrl,\n    repoPromise,\n  };\n};\n","import { GitProcess } from 'dugite';\nimport moment, { Moment } from 'moment';\nimport { DIR_REPO } from '../../constants';\nimport { GitConfig } from '../getGitConfig';\n\nconst getLastCommit = async (): Promise<{ hash: string; date: Moment }> => {\n  const { stdout } = await GitProcess.exec(\n    [\n      'log',\n      '-n',\n      '1',\n      '--date=iso',\n      '--pretty=format:{ \"hash\": \"%H\", \"date\": \"%ad\" }',\n    ],\n    DIR_REPO(),\n  );\n\n  const { hash, date } = JSON.parse(stdout);\n\n  return { hash, date: moment(date, 'YYYY-MM-DD HH:mm:ss Z') };\n};\n\nexport default async ({ repoPromise }: GitConfig): Promise<boolean> => {\n  await repoPromise;\n  await GitProcess.exec(['fetch'], DIR_REPO());\n  await GitProcess.exec(['checkout', 'origin/master'], DIR_REPO());\n  const remote = await getLastCommit();\n  await GitProcess.exec(['checkout', 'master'], DIR_REPO());\n  const local = await getLastCommit();\n  return moment(remote.date).isAfter(local.date) && local.hash !== remote.hash;\n};\n","import { GitProcess } from 'dugite';\nimport { ensureFile, copyFile } from 'fs-extra';\nimport { FILE_RESTORE, FILE_BACKUP, DIR_REPO } from '../../constants';\nimport { GitConfig } from '../getGitConfig';\n\nexport default async ({ repoPromise }: GitConfig): Promise<void> => {\n  await repoPromise;\n  await GitProcess.exec(['fetch'], DIR_REPO());\n  await GitProcess.exec(['merge', 'origin/master', 'master'], DIR_REPO());\n  await ensureFile(FILE_RESTORE());\n  await copyFile(FILE_BACKUP(), FILE_RESTORE());\n};\n","import { GitProcess } from 'dugite';\nimport { copy } from 'fs-extra';\nimport { FILE_RESTORE, FILE_BACKUP, DIR_REPO } from '../../constants';\nimport { GitConfig } from '../getGitConfig';\n\nexport default async ({ repoPromise, remoteUrl }: GitConfig): Promise<void> => {\n  await copy(FILE_RESTORE(), FILE_BACKUP(), { overwrite: true });\n  await repoPromise;\n  await GitProcess.exec(['add', 'remote', remoteUrl], DIR_REPO());\n  await GitProcess.exec(['fetch'], DIR_REPO());\n  await GitProcess.exec(['add', '.'], DIR_REPO());\n  await GitProcess.exec(['commit', '-m', `${new Date()}`], DIR_REPO());\n  await GitProcess.exec(['push', 'origin', 'master'], DIR_REPO());\n};\n","import { TITLE, ERROR_TITLE, SyncSettings } from '../../constants';\nimport updates from './updates';\nimport restore from './restore';\nimport backup from './backup';\nimport { GitConfig } from '../getGitConfig';\nimport notify from '../notify';\n\nexport interface Commands {\n  checkForUpdates: () => Promise<void>;\n  tryToBackup: () => Promise<void>;\n  tryToRestore: () => Promise<void>;\n}\n\nexport default (config: GitConfig, { quiet }: SyncSettings): Commands => {\n  const catchError = (err: Error): void => {\n    notify({ title: ERROR_TITLE, body: err.message, level: 'error' });\n    throw err;\n  };\n\n  const notifyMsg = (emoji: string, message: string): void | string =>\n    notify({\n      title: `${TITLE} ${emoji}`,\n      body: message,\n      url: config.url,\n      level: 'info',\n    });\n\n  return {\n    checkForUpdates: async (): Promise<void> => {\n      const isUpdated = await updates(config).catch(catchError);\n\n      if (isUpdated) {\n        notifyMsg('‚ùóÔ∏è', 'Your settings need to be updated.');\n      } else if (!quiet) {\n        notifyMsg('üëç', 'Your settings are up to date.');\n      }\n    },\n    tryToBackup: async (): Promise<void> => {\n      await backup(config).catch(catchError);\n      notifyMsg('üîú', 'Your settings have been saved.');\n    },\n    tryToRestore: async (): Promise<void> => {\n      await restore(config).catch(catchError);\n      notifyMsg('üîô', 'Your settings have been restored.');\n    },\n  };\n};\n","import { ERROR_TITLE, SETUP_URL, getHyperApp } from '../constants';\nimport getGitConfig, { GitConfig } from './getGitConfig';\nimport getCommands, { Commands } from './getCommands';\nimport notify from './notify';\n\nexport interface ConfigAndCommands {\n  config: GitConfig;\n  commands: Commands;\n}\n\nexport default async (): Promise<null | ConfigAndCommands> => {\n  const notifyErr = (message: string): void | string =>\n    notify({\n      title: ERROR_TITLE,\n      body: message,\n      url: SETUP_URL,\n      level: 'error',\n    });\n\n  if (\n    !getHyperApp().config ||\n    typeof getHyperApp().config.getConfig !== 'function'\n  ) {\n    throw new Error(\n      '`app` from `electron` does not have the `config` object from Hyper!',\n    );\n  }\n\n  const config = await getGitConfig();\n  const { personalAccessToken, gistId } = config;\n  const hyperConfig = getHyperApp().config.getConfig().syncSettings || {\n    quiet: false,\n  };\n\n  if (personalAccessToken && gistId) {\n    const commands = getCommands(config, hyperConfig);\n    return { config, commands };\n  }\n\n  if (!personalAccessToken && !gistId) {\n    notifyErr('Settings not found! Click for more info.');\n    return null;\n  }\n\n  if (!personalAccessToken) {\n    notifyErr('`personalAccessToken` not set! Click for more info.');\n  }\n\n  if (!gistId) {\n    notifyErr('`gistId` not set! Click for more info.');\n  }\n\n  return null;\n};\n","// eslint-disable-next-line import/no-extraneous-dependencies\nimport { MenuItemConstructorOptions, shell } from 'electron';\nimport { ensureDir } from 'fs-extra';\nimport checkForMissingSettings, {\n  ConfigAndCommands,\n} from './lib/checkForMissingSettings';\nimport {\n  GIST_URL,\n  DIR_REPO,\n  FILE_CONFIG,\n  POSSIBLE_ACCELERATORS,\n  Accelerators,\n  SyncSettings,\n  getHyperApp,\n} from './constants';\n\ntype ValueOf<T> = T[keyof T];\n\nconst defaultAccelerators: Partial<SyncSettings['accelerators']> = {};\n\nexport default (\n  menu: MenuItemConstructorOptions[] = [],\n): MenuItemConstructorOptions[] => {\n  // Proactively notify about missing settings\n  (async (): Promise<void> => {\n    await getHyperApp().whenReady();\n    checkForMissingSettings();\n  })();\n\n  const checkAndCallback = (\n    callback: (gitConfig: ConfigAndCommands) => void,\n  ): NonNullable<MenuItemConstructorOptions['click']> => async (): Promise<\n    void\n  > => {\n    const commandsAndConfig = await checkForMissingSettings();\n    if (commandsAndConfig === null) return;\n    callback(commandsAndConfig);\n  };\n\n  checkAndCallback(({ commands }: ConfigAndCommands): void => {\n    commands.checkForUpdates();\n  });\n\n  const {\n    syncSettings: {\n      accelerators: syncSettingsAccelerators = defaultAccelerators,\n    } = {},\n  } = getHyperApp().config.getConfig();\n\n  const accelerators: Partial<Record<\n    Accelerators,\n    { accelerator: ValueOf<SyncSettings['accelerators']> }\n  >> = POSSIBLE_ACCELERATORS.reduce(\n    (\n      allAccelerators: Partial<\n        Record<\n          Accelerators,\n          { accelerator: ValueOf<SyncSettings['accelerators']> }\n        >\n      >,\n      nextKey: Accelerators,\n    ): Partial<\n      Record<\n        Accelerators,\n        { accelerator: ValueOf<SyncSettings['accelerators']> }\n      >\n    > => {\n      const accelerator = syncSettingsAccelerators[nextKey];\n      return {\n        ...allAccelerators,\n        [nextKey]: accelerator ? { accelerator } : {},\n      };\n    },\n    {},\n  );\n\n  const newMenu = menu.map(\n    (item: MenuItemConstructorOptions): MenuItemConstructorOptions => {\n      if (item.label !== 'Plugins') return item;\n      return {\n        ...item,\n        submenu: [\n          ...(Array.isArray(item.submenu) ? item.submenu : []),\n          {\n            label: 'Sync Settings',\n            type: 'submenu',\n            submenu: [\n              {\n                label: 'Check for Updates',\n                click: checkAndCallback(\n                  ({ commands }: ConfigAndCommands): void => {\n                    commands.checkForUpdates();\n                  },\n                ),\n                ...accelerators.checkForUpdates,\n              },\n              {\n                label: 'Backup Settings',\n                click: checkAndCallback(\n                  ({ commands }: ConfigAndCommands): void => {\n                    commands.tryToBackup();\n                  },\n                ),\n                ...accelerators.backupSettings,\n              },\n              {\n                label: 'Restore Settings',\n                click: checkAndCallback(\n                  ({ commands }: ConfigAndCommands): void => {\n                    commands.tryToRestore();\n                  },\n                ),\n                ...accelerators.restoreSettings,\n              },\n              {\n                label: 'Open',\n                type: 'submenu',\n                submenu: [\n                  {\n                    label: 'Gist',\n                    click: (...args): void => {\n                      checkAndCallback(\n                        ({ config }: ConfigAndCommands): void => {\n                          if (config.url) {\n                            shell.openExternal(config.url);\n                            return;\n                          }\n\n                          if (config.gistId) {\n                            shell.openExternal(GIST_URL(config.gistId));\n                            return;\n                          }\n\n                          shell.openExternal('https://gist.github.com');\n                        },\n                      )(...args);\n                    },\n                    ...accelerators.openGist,\n                  },\n                  {\n                    label: 'Repo',\n                    click: async (): Promise<void> => {\n                      await ensureDir(DIR_REPO());\n                      shell.openItem(DIR_REPO());\n                    },\n                    ...accelerators.openRepo,\n                  },\n                  {\n                    label: 'Configuration',\n                    click: (): void => {\n                      shell.openItem(FILE_CONFIG());\n                    },\n                    ...accelerators.openConfiguration,\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n      };\n    },\n  );\n\n  return newMenu;\n};\n"],"names":["getHyperApp","app","Error","whenReady","GIST_URL","gistId","token","TITLE","ERROR_TITLE","SETUP_URL","DIR_HOME","process","env","XDG_CONFIG_HOME","resolvePath","platform","getPath","homedir","DIR_REPO","FILE_CONFIG","FILE_CONFIG_TEMPLATE","__dirname","FILE_BACKUP","FILE_RESTORE","POSSIBLE_ACCELERATORS","title","body","url","level","console","filter","Boolean","join","isReady","error","notification","Notification","on","shell","openExternal","show","getIdAndToken","config","personalAccessToken","HYPER_SYNC_SETTINGS_PERSONAL_ACCESS_TOKEN","HYPER_SYNC_SETTINGS_GIST_ID","pathExists","notify","copyFile","readJson","err","remoteUrl","repoPromise","Promise","resolve","ensureDir","GitProcess","exec","message","getLastCommit","stdout","hash","date","JSON","parse","moment","remote","local","isAfter","ensureFile","copy","overwrite","Date","quiet","catchError","notifyMsg","emoji","checkForUpdates","isUpdated","updates","catch","tryToBackup","backup","tryToRestore","restore","notifyErr","getConfig","getGitConfig","hyperConfig","syncSettings","commands","getCommands","defaultAccelerators","menu","checkForMissingSettings","checkAndCallback","callback","commandsAndConfig","accelerators","syncSettingsAccelerators","reduce","allAccelerators","nextKey","accelerator","newMenu","map","item","label","submenu","Array","isArray","type","click","backupSettings","restoreSettings","args","openGist","openItem","openRepo","openConfiguration"],"mappings":"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"}