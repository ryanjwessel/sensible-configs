{
  "manifest": {
    "name": "dns-socket",
    "version": "1.6.3",
    "description": "Make custom low-level DNS requests from node with retry support.",
    "main": "index.js",
    "dependencies": {
      "dns-packet": "^1.1.0"
    },
    "devDependencies": {
      "standard": "^6.0.7",
      "tape": "^4.4.0"
    },
    "scripts": {
      "test": "standard && tape test.js"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/mafintosh/dns-socket.git"
    },
    "files": [
      "index.js"
    ],
    "author": {
      "name": "Mathias Buus",
      "url": "@mafintosh"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/mafintosh/dns-socket/issues"
    },
    "homepage": "https://github.com/mafintosh/dns-socket",
    "_registry": "npm",
    "_loc": "/Users/rwessel/.hyper_plugins/cache/v6/npm-dns-socket-1.6.3-5268724fad4aa46ad9c5ca4ffcd16e1de5342aab-integrity/node_modules/dns-socket/package.json",
    "readmeFilename": "README.md",
    "readme": "# dns-socket\n\nMake custom low-level DNS requests from node with retry support.\n\n```\nnpm install dns-socket\n```\n\n[![build status](https://travis-ci.org/mafintosh/dns-socket.svg?branch=master)](https://travis-ci.org/mafintosh/dns-socket)\n\n## Usage\n\n``` js\nvar dns = require('dns-socket')\nvar socket = dns()\n\nsocket.query({\n  questions: [{\n    type: 'A',\n    name: 'google.com'\n  }]\n}, 53, '8.8.8.8', function (err, res) {\n  console.log(err, res) // prints the A record for google.com\n})\n```\n\n## API\n\n#### `var socket = dns([options])`\n\nCreate a new DNS socket instance. The `options` object includes:\n\n- `retries` *Number*: Number of total query attempts made during `timeout`. Default: 5.\n- `socket` *Object*: A custom dgram socket. Default: A `'udp4'` socket.\n- `timeout` *Number*: Total timeout in milliseconds after which a `'timeout'` event is emitted. Default: 7500.\n\n#### `socket.on('query', query, port, host)`\n\nEmitted when a dns query is received. The query is a [dns-packet](https://github.com/mafintosh/dns-packet)\n\n#### `socket.on('response', response, port, host)`\n\nEmitted when a dns response is received. The response is a [dns-packet](https://github.com/mafintosh/dns-packet)\n\n#### `var id = socket.query(query, port, [host], [callback])`\n\nSend a dns query. If host is omitted it defaults to localhost. When the remote replies the callback is called with `(err, response, query)` and an response is emitted as well. If the query times out the callback is called with an error.\n\nReturns the query id\n\n#### `socket.response(query, response, port, [host])`\n\nSend a response to a query.\n\n#### `socket.cancel(id)`\n\nCancel a query\n\n#### `socket.bind(port, [onlistening])`\n\nBind the underlying udp socket to a specific port.\n\n#### `socket.destroy([onclose])`\n\nDestroy the socket.\n\n#### `socket.inflight`\n\nNumber of inflight queries.\n\n## License\n\nMIT\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Mathias Buus\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/dns-socket/-/dns-socket-1.6.3.tgz#5268724fad4aa46ad9c5ca4ffcd16e1de5342aab",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/dns-socket/-/dns-socket-1.6.3.tgz",
    "hash": "5268724fad4aa46ad9c5ca4ffcd16e1de5342aab",
    "integrity": "sha512-/mUy3VGqIP69dAZjh2xxHXcpK9wk2Len1Dxz8mWAdrIgFC8tnR/aQAyU4a+UTXzOcTvEvGBdp1zFiwnpWKaXng==",
    "registry": "npm",
    "packageName": "dns-socket",
    "cacheIntegrity": "sha512-/mUy3VGqIP69dAZjh2xxHXcpK9wk2Len1Dxz8mWAdrIgFC8tnR/aQAyU4a+UTXzOcTvEvGBdp1zFiwnpWKaXng== sha1-UmhyT61KpGrZxcpP/NFuHeU0Kqs="
  },
  "registry": "npm",
  "hash": "5268724fad4aa46ad9c5ca4ffcd16e1de5342aab"
}